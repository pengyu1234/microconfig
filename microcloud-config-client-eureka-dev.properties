server.port=7001
spring.application.name=eureka-7001

# 定义Eureka实例所在的主机名称
eureka.instance.hostname=eureka-7001.com
# 客户端进行Eureka注册的配置
eureka.client.service-url.defaultZone = http://eureka-7002.com:7002/eureka,http://eureka-7003.com:7003/eureka
# 当前的微服务不注册到eureka之中
eureka.client.register-with-eureka=false
# 不通过eureka获取注册信息
eureka.client.fetch-registry=false

##########################################################################
#eureka作为所有微服务的监控处理程序，对于监控程序必然面临以下问题：
#1.新服务追加的时候，应该可以立刻进行注册
#2.当某一个服务下线之后应该可以进行清理
#设置服务的清理间隔时间，而后这个时间使用的是毫秒(不设置的话，默认是60秒)
#########################################################################
eureka.server.eviction-interval-timer-in-ms=60000

##########################################################################
#在eureka里面还有一个问题就是它默认支持有保护模式，所谓的保护模式值的是，
# 即便现在某一个微服务不可用了，eureka不会清理，依然进行该微服务信息的保存
#设置false关闭保护模式,默认是true
#########################################################################
#eureka.server.enable-self-preservation=false




